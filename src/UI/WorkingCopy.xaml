<UserControl x:Class="SourceGit.UI.WorkingCopy"
             x:Name="me"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:source="clr-namespace:SourceGit"
             xmlns:local="clr-namespace:SourceGit.UI"
             xmlns:helpers="clr-namespace:SourceGit.Helpers"
             xmlns:converters="clr-namespace:SourceGit.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <converters:BoolToCollapsed x:Key="BoolToCollapsed"/>
        <converters:InverseBoolToCollapsed x:Key="InverseBoolToCollapsed"/>
        <converters:FileStatusToColor x:Key="UnstagedStatusConverter" OnlyWorkTree="True"/>
        <converters:FileStatusToIcon x:Key="UnstagedStatusIconConverter" OnlyWorkTree="True"/>
        <converters:FileStatusToColor x:Key="StagedStatusConverter"/>
        <converters:FileStatusToIcon x:Key="StagedStatusIconConverter"/>
        <converters:FilesDisplayModeToList x:Key="FilesDisplayModeToList"/>
        <converters:FilesDisplayModeToList x:Key="FilesDisplayModeToListOnly" TreatGridAsList="False"/>
        <converters:FilesDisplayModeToTree x:Key="FilesDisplayModeToTree"/>
        <converters:FilesDisplayModeToGrid x:Key="FilesDisplayModeToGrid"/>
        <converters:PathToFileName x:Key="PathToFileName"/>
        <converters:PathToFolderName x:Key="PathToFolderName"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Left -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="26"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="26"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Unstaged changes toolbar -->
            <Border Grid.Row="0" BorderBrush="{StaticResource Brush.Border0}" BorderThickness="0,0,0,1" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <local:FilesDisplayModeSwitch
                        Grid.Column="0"
                        Mode="{Binding Source={x:Static source:App.Setting}, Path=UI.UnstageFileDisplayMode, Mode=TwoWay}"/>
                    <Label Grid.Column="1" Content="{StaticResource Text.WorkingCopy.Unstaged}" FontWeight="Bold" Foreground="{StaticResource Brush.FG2}"/>

                    <Path x:Name="iconStaging" Grid.Column="2" Visibility="Collapsed" Margin="8,0" Data="{StaticResource Icon.Loading}" RenderTransformOrigin=".5,.5">
                        <Path.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Path.RenderTransform>
                    </Path>

                    <Button Grid.Column="4" Click="Stage" Margin="4,0" ToolTip="{StaticResource Text.WorkingCopy.Unstaged.Stage}" Background="Transparent">
                        <Path Width="14" Height="14" Data="{StaticResource Icon.Down}" Opacity=".4"/>
                    </Button>
                    <Button Grid.Column="5" Click="StageAll" Margin="4,0" ToolTip="{StaticResource Text.WorkingCopy.Unstaged.StageAll}" Background="Transparent">
                        <Path Width="14" Height="14" Data="{StaticResource Icon.DoubleDown}" Opacity=".4"/>
                    </Button>
                </Grid>
            </Border>
            
            <!-- Unstage changes tree view mode -->
            <TreeView
                Grid.Row="1" 
                x:Name="unstagedTree"
                ItemsSource="{Binding ElementName=me, Path=UnstagedTreeData, IsAsync=True}"
                Background="{StaticResource Brush.Contents}"
                Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.UnstageFileDisplayMode, Converter={StaticResource FilesDisplayModeToTree}}"
                FontFamily="Consolas" 
                PreviewMouseWheel="TreeMouseWheel"
                helpers:TreeViewHelper.EnableMultiSelection="True"
                helpers:TreeViewHelper.MultiSelectionChanged="UnstagedTreeMultiSelectionChanged">
                <TreeView.Resources>
                    <RoutedUICommand x:Key="SelectWholeTreeCommand" Text="SelectWholeTree"/>
                </TreeView.Resources>

                <TreeView.InputBindings>
                    <KeyBinding Key="A" Modifiers="Ctrl" Command="{StaticResource SelectWholeTreeCommand}"/>
                </TreeView.InputBindings>

                <TreeView.CommandBindings>
                    <CommandBinding Command="{StaticResource SelectWholeTreeCommand}" Executed="SelectWholeTree"/>
                </TreeView.CommandBindings>

                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource Style.TreeView.MultiSelectionItemContainerStyle}">
                        <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded, Mode=TwoWay}"/>
                        <EventSetter Event="ContextMenuOpening" Handler="UnstagedTreeContextMenuOpening"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal" Height="24">
                            <Border x:Name="status" Width="14" Height="14" Visibility="Collapsed" Background="{Binding Change, Converter={StaticResource UnstagedStatusConverter}}" CornerRadius="2" Margin="0,0,4,0">
                                <TextBlock Text="{Binding Change, Converter={StaticResource UnstagedStatusIconConverter}}" Foreground="{StaticResource Brush.FG1}" TextAlignment="Center" VerticalAlignment="Center" FontSize="10" RenderOptions.BitmapScalingMode="HighQuality"/>
                            </Border>
                            <Path x:Name="icon" Width="14" Fill="Goldenrod" Data="{StaticResource Icon.Folder.Fill}"/>
                            <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush.FG1}" TextAlignment="Center" VerticalAlignment="Center" Margin="4,0,0,0" FontSize="11"/>
                        </StackPanel>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsFile}" Value="True">
                                <Setter TargetName="status" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsFile}" Value="False"/>
                                    <Condition Binding="{Binding IsNodeExpanded}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="icon" Property="Data" Value="{StaticResource Icon.Folder.Open}"/>
                            </MultiDataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <!-- Unstaged changes list/grid view mode -->
            <DataGrid
                Grid.Row="1"
                x:Name="unstagedList"               
                ItemsSource="{Binding ElementName=me, Path=UnstagedListData, IsAsync=True}"
                Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.UnstageFileDisplayMode, Converter={StaticResource FilesDisplayModeToList}}"
                RowHeight="24"
                SelectionChanged="UnstagedListSelectionChanged"
                SelectionMode="Extended"
                SelectionUnit="FullRow"
                Background="{StaticResource Brush.Contents}">
                <DataGrid.Resources>
                    <Style x:Key="Style.DataGridText.VerticalCenter" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="4,0"/>
                    </Style>

                    <RoutedUICommand x:Key="SelectWholeDataGridCommand" Text="SelectWholeDataGrid"/>
                </DataGrid.Resources>

                <DataGrid.InputBindings>
                    <KeyBinding Key="A" Modifiers="Ctrl" Command="{StaticResource SelectWholeDataGridCommand}"/>
                </DataGrid.InputBindings>

                <DataGrid.CommandBindings>
                    <CommandBinding Command="{StaticResource SelectWholeDataGridCommand}" Executed="SelectWholeDataGrid"/>
                </DataGrid.CommandBindings>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="22">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Width="14" Height="14" x:Name="status" Background="{Binding ., Converter={StaticResource UnstagedStatusConverter}}" CornerRadius="2" Margin="2,0">
                                    <TextBlock Text="{Binding ., Converter={StaticResource UnstagedStatusIconConverter}}" Foreground="{StaticResource Brush.FG1}" TextAlignment="Center" VerticalAlignment="Center" FontSize="8"/>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn 
                        Width="Auto" 
                        Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.UnstageFileDisplayMode, Converter={StaticResource FilesDisplayModeToGrid}}" 
                        Binding="{Binding Path, Converter={StaticResource PathToFileName}}" 
                        Foreground="{StaticResource Brush.FG1}" 
                        FontFamily="Consolas" 
                        ElementStyle="{StaticResource Style.DataGridText.VerticalCenter}"/>

                    <DataGridTextColumn 
                        Width="*" 
                        Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.UnstageFileDisplayMode, Converter={StaticResource FilesDisplayModeToGrid}}" 
                        Binding="{Binding Path, Converter={StaticResource PathToFolderName}}" 
                        Foreground="{StaticResource Brush.FG2}" 
                        FontFamily="Consolas" 
                        ElementStyle="{StaticResource Style.DataGridText.VerticalCenter}"/>

                    <DataGridTextColumn
                        Width="*"
                        Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.UnstageFileDisplayMode, Converter={StaticResource FilesDisplayModeToListOnly}}" 
                        Binding="{Binding Path}"
                        Foreground="{StaticResource Brush.FG1}"
                        FontFamily="Consolas"
                        ElementStyle="{StaticResource Style.DataGridText.VerticalCenter}"/>
                </DataGrid.Columns>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource Style.DataGridRow}">
                        <EventSetter Event="ContextMenuOpening" Handler="UnstagedListContextMenuOpening"/>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            
            <!-- Staged changes toolbar -->
            <Border Grid.Row="2" BorderBrush="{StaticResource Brush.Border0}" BorderThickness="0,1,0,1" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <local:FilesDisplayModeSwitch
                        Grid.Column="0"
                        Mode="{Binding Source={x:Static source:App.Setting}, Path=UI.StagedFileDisplayMode, Mode=TwoWay}"/>
                    <Label Grid.Column="1" Content="{StaticResource Text.WorkingCopy.Staged}" FontWeight="Bold" Foreground="{StaticResource Brush.FG2}"/>
                    <Button Grid.Column="3" Click="Unstage" ToolTip="{StaticResource Text.WorkingCopy.Staged.Unstage}" Margin="4,0" Background="Transparent">
                        <Path Width="14" Height="14" Data="{StaticResource Icon.Up}" Opacity=".4"/>
                    </Button>
                    <Button Grid.Column="4" Click="UnstageAll" ToolTip="{StaticResource Text.WorkingCopy.Staged.UnstageAll}" Margin="4,0" Background="Transparent">
                        <Path Width="14" Height="14" Data="{StaticResource Icon.DoubleUp}" Opacity=".4"/>
                    </Button>
                </Grid>
            </Border>
            
            <!-- Staged changes tree view mode -->
            <TreeView
                Grid.Row="3" 
                x:Name="stageTree"
                ItemsSource="{Binding ElementName=me, Path=StagedTreeData, IsAsync=False}"
                Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.StagedFileDisplayMode, Converter={StaticResource FilesDisplayModeToTree}}"
                Background="{StaticResource Brush.Contents}"
                FontFamily="Consolas" 
                PreviewMouseWheel="TreeMouseWheel"
                helpers:TreeViewHelper.EnableMultiSelection="True"
                helpers:TreeViewHelper.MultiSelectionChanged="StageTreeMultiSelectionChanged">
                <TreeView.Resources>
                    <RoutedUICommand x:Key="SelectWholeTreeCommand" Text="SelectWholeTree"/>
                </TreeView.Resources>

                <TreeView.InputBindings>
                    <KeyBinding Key="A" Modifiers="Ctrl" Command="{StaticResource SelectWholeTreeCommand}"/>
                </TreeView.InputBindings>

                <TreeView.CommandBindings>
                    <CommandBinding Command="{StaticResource SelectWholeTreeCommand}" Executed="SelectWholeTree"/>
                </TreeView.CommandBindings>

                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource Style.TreeView.MultiSelectionItemContainerStyle}">
                        <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded, Mode=TwoWay}"/>
                        <EventSetter Event="ContextMenuOpening" Handler="StageTreeContextMenuOpening"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal" Height="24">
                            <Border x:Name="status" Width="14" Height="14" Visibility="Collapsed" Background="{Binding Change, Converter={StaticResource StagedStatusConverter}}" CornerRadius="2" Margin="0,0,4,0">
                                <TextBlock Text="{Binding Change, Converter={StaticResource StagedStatusIconConverter}}" Foreground="{StaticResource Brush.FG1}" TextAlignment="Center" VerticalAlignment="Center" FontSize="10" RenderOptions.BitmapScalingMode="HighQuality"/>
                            </Border>
                            <Path x:Name="icon" Width="14" Fill="Goldenrod" Data="{StaticResource Icon.Folder.Fill}"/>
                            <TextBlock Text="{Binding Name}" Foreground="{StaticResource Brush.FG1}" TextAlignment="Center" VerticalAlignment="Center" Margin="4,0,0,0" FontSize="11"/>
                        </StackPanel>

                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsFile}" Value="True">
                                <Setter TargetName="status" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsFile}" Value="False"/>
                                    <Condition Binding="{Binding IsNodeExpanded}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="icon" Property="Data" Value="{StaticResource Icon.Folder.Open}"/>
                            </MultiDataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <DataGrid
                Grid.Row="3"
                x:Name="stageList"                    
                ItemsSource="{Binding ElementName=me, Path=StagedListData, IsAsync=False}"
                RowHeight="24"
                Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.StagedFileDisplayMode, Converter={StaticResource FilesDisplayModeToList}}"
                SelectionChanged="StagedListSelectionChanged"
                SelectionMode="Extended"
                SelectionUnit="FullRow"
                Background="{StaticResource Brush.Contents}">
                <DataGrid.Resources>
                    <Style x:Key="Style.DataGridText.VerticalCenter" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="4,0"/>
                    </Style>

                    <RoutedUICommand x:Key="SelectWholeDataGridCommand" Text="SelectWholeDataGrid"/>
                </DataGrid.Resources>

                <DataGrid.InputBindings>
                    <KeyBinding Key="A" Modifiers="Ctrl" Command="{StaticResource SelectWholeDataGridCommand}"/>
                </DataGrid.InputBindings>

                <DataGrid.CommandBindings>
                    <CommandBinding Command="{StaticResource SelectWholeDataGridCommand}" Executed="SelectWholeDataGrid"/>
                </DataGrid.CommandBindings>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="22">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Width="14" Height="14" x:Name="status" Background="{Binding ., Converter={StaticResource StagedStatusConverter}}" CornerRadius="2" Margin="2,0">
                                    <TextBlock Text="{Binding ., Converter={StaticResource StagedStatusIconConverter}}" Foreground="{StaticResource Brush.FG1}" TextAlignment="Center" VerticalAlignment="Center" FontSize="8"/>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn 
                        Width="Auto"                            
                        Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.StagedFileDisplayMode, Converter={StaticResource FilesDisplayModeToGrid}}" 
                        Binding="{Binding Path, Converter={StaticResource PathToFileName}}" 
                        Foreground="{StaticResource Brush.FG1}" 
                        FontFamily="Consolas" 
                        ElementStyle="{StaticResource Style.DataGridText.VerticalCenter}"/>

                    <DataGridTextColumn 
                        Width="*"                            
                        Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.StagedFileDisplayMode, Converter={StaticResource FilesDisplayModeToGrid}}" 
                        Binding="{Binding Path, Converter={StaticResource PathToFolderName}}" 
                        Foreground="{StaticResource Brush.FG2}" 
                        FontFamily="Consolas" 
                        ElementStyle="{StaticResource Style.DataGridText.VerticalCenter}"/>

                    <DataGridTextColumn
                        Width="*" 
                        Visibility="{Binding Source={x:Static source:App.Setting}, Path=UI.StagedFileDisplayMode, Converter={StaticResource FilesDisplayModeToListOnly}}" 
                        Binding="{Binding Path}" 
                        Foreground="{StaticResource Brush.FG1}" 
                        FontFamily="Consolas" 
                        ElementStyle="{StaticResource Style.DataGridText.VerticalCenter}"/>
                </DataGrid.Columns>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource Style.DataGridRow}">
                        <EventSetter Event="ContextMenuOpening" Handler="StagedListContextMenuOpening"/>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </Grid>

        <!-- Splitter -->
        <GridSplitter Grid.Column="1" Width="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{StaticResource Brush.Border0}"/>

        <!-- Right -->
        <Grid Grid.Column="2" Margin="8">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="66"/>
                <RowDefinition Height="36"/>
            </Grid.RowDefinitions>

            <!-- Diff -->
            <local:DiffViewer Grid.Row="0" x:Name="diffViewer" Margin="0,0,0,4"/>

            <!-- Merge -->
            <Grid Grid.Row="0" x:Name="mergePanel" Background="{StaticResource Brush.Window}" Visibility="Collapsed">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path Width="64" Height="64" Data="{StaticResource Icon.Conflict}" Margin="0,0,0,16"/>
                    <Label Content="{StaticResource Text.WorkingCopy.Conflicts}" FontSize="20" HorizontalAlignment="Center" FontWeight="DemiBold" Foreground="{StaticResource Brush.FG2}" Margin="0,0,0,24"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,4">
                        <Button Click="UseTheirs" Style="{StaticResource Style.Button.Bordered}" Content="{StaticResource Text.WorkingCopy.UseTheirs}" Height="24"/>
                        <Button Click="UseMine" Style="{StaticResource Style.Button.Bordered}" Content="{StaticResource Text.WorkingCopy.UseMine}" Height="24" Margin="8,0"/>
                        <Button Click="OpenMergeTool" Style="{StaticResource Style.Button.Bordered}" Content="{StaticResource Text.WorkingCopy.OpenMerger}" Height="24"/>
                    </StackPanel>
                </StackPanel>
            </Grid>

            <!-- Commit Message -->
            <TextBox
                x:Name="txtCommitMsg"
                Grid.Row="1"
                Height="64"
                Padding="2"
                AcceptsReturn="True"
                AcceptsTab="True"
                TextWrapping="Wrap"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                helpers:TextBoxHelper.Placeholder="{StaticResource Text.WorkingCopy.CommitMessageTip}"
                helpers:TextBoxHelper.PlaceholderBaseline="Top"
                GotFocus="CommitMsgGotFocus"
                PreviewMouseWheel="CommitMsgPreviewMouseWheel">
                <TextBox.Text>
                    <Binding ElementName="me" Path="CommitMessage" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <helpers:CommitSubjectRequiredRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <!-- Commit Options -->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Width="16" Height="16" Margin="0,0,8,0" Click="OpenCommitMessageSelector" ToolTip="{StaticResource Text.WorkingCopy.MessageHistories}">
                    <Path Width="14" Height="14" Data="{StaticResource Icon.List}"/>
                </Button>

                <CheckBox Grid.Column="1" x:Name="chkAmend" HorizontalAlignment="Left" Content="{StaticResource Text.WorkingCopy.Amend}" Checked="StartAmend" Unchecked="EndAmend"/>

                <!-- Loading tip -->
                <Path x:Name="iconCommiting" Grid.Column="3" Visibility="Collapsed" Margin="8,0" Data="{StaticResource Icon.Loading}" RenderTransformOrigin=".5,.5">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>
                
                <Button Grid.Column="4" Height="26" Click="Commit" Style="{StaticResource Style.Button.AccentBordered}" Content="{StaticResource Text.WorkingCopy.Commit}"/>
                <Button Grid.Column="5" x:Name="btnCommitAndPush" Height="26" Click="CommitAndPush" Style="{StaticResource Style.Button.Bordered}" Content="{StaticResource Text.WorkingCopy.CommitAndPush}" Margin="8,0,0,0"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>

