<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="using:SourceGit"
        xmlns:vm="using:SourceGit.ViewModels"
        xmlns:m="using:SourceGit.Models"
        xmlns:c="using:SourceGit.Converters"
        xmlns:v="using:SourceGit.Views"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="SourceGit.Views.Launcher"
        x:DataType="vm:Launcher"
        x:Name="me"
        Icon="/App.ico"
        Title="SourceGit"
        Background="Transparent"
        MinWidth="1280" MinHeight="720"
        WindowStartupLocation="CenterScreen"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        SystemDecorations="{OnPlatform Full, Linux=None}">
  <Window.Resources>
    <SolidColorBrush x:Key="SystemControlErrorTextForegroundBrush" Color="Red"/>
  </Window.Resources>
  
  <Grid Margin="{Binding #me.WindowState, Converter={x:Static c:WindowStateConverters.ToContentMargin}}">
    <Grid.RowDefinitions>
      <RowDefinition Height="{Binding #me.WindowState, Converter={x:Static c:WindowStateConverters.ToTitleBarHeight}}"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <!-- Custom window shadow for Linux -->
    <Border Grid.Row="0" Grid.RowSpan="2"
            Background="{DynamicResource Brush.Window}"
            Effect="drop-shadow(0 0 6 #A0000000)"
            IsVisible="{OnPlatform False, Linux=True}"/>

    <!-- Custom TitleBar -->
    <Grid Grid.Row="0" ColumnDefinitions="Auto,*,Auto">
      <!-- Bottom border -->
      <Border Grid.Column="0" Grid.ColumnSpan="3"
              Background="{DynamicResource Brush.TitleBar}"
              BorderThickness="0,0,0,1" BorderBrush="{DynamicResource Brush.Border0}"
              DoubleTapped="MaximizeOrRestoreWindow"
              PointerPressed="BeginMoveWindow"/>

      <!-- Caption Buttons (macOS) -->
      <Border Grid.Column="0" VerticalAlignment="Stretch" Margin="2,0,8,3" IsVisible="{OnPlatform False, macOS=True}">
        <v:CaptionButtonsMacOS VerticalAlignment="Bottom"/>
      </Border>

      <!-- Menu -->
      <Button Grid.Column="0" Classes="icon_button" VerticalAlignment="Bottom" IsVisible="{OnPlatform True, macOS=False}">
        <Button.Margin>
          <OnPlatform Default="4,0,2,3" macOS="4,0,6,3"/>
        </Button.Margin>
        
        <Button.Flyout>
          <MenuFlyout Placement="BottomEdgeAlignedLeft" VerticalOffset="-8">
            <MenuItem Header="{DynamicResource Text.Preference}" Command="{x:Static s:App.OpenPreferenceCommand}" InputGesture="Ctrl+Shift+P">
              <MenuItem.Icon>
                <Path Width="14" Height="14" Data="{StaticResource Icons.Settings2}"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{DynamicResource Text.Hotkeys}" Command="{x:Static s:App.OpenHotkeysCommand}">
              <MenuItem.Icon>
                <Path Width="14" Height="14" Data="{StaticResource Icons.Hotkeys}"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="-"/>
            <MenuItem Header="{DynamicResource Text.SelfUpdate}" Command="{x:Static s:App.CheckForUpdateCommand}">
              <MenuItem.Icon>
                <Path Width="14" Height="14" Data="{StaticResource Icons.SoftwareUpdate}"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="-"/>
            <MenuItem Header="{DynamicResource Text.About}" Command="{x:Static s:App.OpenAboutCommand}">
              <MenuItem.Icon>
                <Path Width="14" Height="14" Data="{StaticResource Icons.Info}"/>
              </MenuItem.Icon>
            </MenuItem>
          </MenuFlyout>
        </Button.Flyout>
        <Path Width="12" Height="12" Data="{StaticResource Icons.Menu}"/>
      </Button>

      <!-- Pages Tabs-->
      <Grid x:Name="launcherTabsContainer" Grid.Column="1" Height="30" ColumnDefinitions="Auto,*,Auto" VerticalAlignment="Bottom" SizeChanged="UpdateScrollIndicator">
        <RepeatButton x:Name="leftScrollIndicator" Grid.Column="0" Classes="icon_button" Width="18" Height="30" Click="ScrollTabsLeft">
          <Path Width="8" Height="14" Stretch="Fill" Data="{StaticResource Icons.TriangleLeft}"/>
        </RepeatButton>

        <ScrollViewer Grid.Column="1"
                      x:Name="launcherTabsScroller"
                      HorizontalScrollBarVisibility="Hidden"
                      VerticalScrollBarVisibility="Disabled"
                      DoubleTapped="MaximizeOrRestoreWindow"
                      PointerPressed="BeginMoveWindow"
                      PointerWheelChanged="ScrollTabs"
                      ScrollChanged="OnTabsScrollChanged">
          <StackPanel x:Name="launcherTabsBar" Orientation="Horizontal" SizeChanged="UpdateScrollIndicator">
            <ListBox Classes="launcher_page_tabbar"
                     ItemsSource="{Binding Pages}"
                     SelectedItem="{Binding ActivePage, Mode=TwoWay}">
              <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                  <VirtualizingStackPanel Orientation="Horizontal" Height="30"/>
                </ItemsPanelTemplate>
              </ListBox.ItemsPanel>

              <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:LauncherPage}">
                  <Border Classes="launcher_pagetab"
                          Height="30"
                          BorderThickness="1,1,1,0"
                          CornerRadius="6,6,0,0"
                          PointerPressed="OnPointerPressedTab"
                          PointerMoved="OnPointerMovedOverTab"
                          PointerReleased="OnPointerReleasedTab"
                          Loaded="SetupDragAndDrop">
                    <Border.ContextMenu>
                      <ContextMenu>
                        <MenuItem Header="{DynamicResource Text.PageTabBar.Tab.Close}"
                                  Command="{Binding #me.((vm:Launcher)DataContext).CloseTab}"
                                  CommandParameter="{Binding}"
                                  InputGesture="{OnPlatform Ctrl+W, macOS=âŒ˜+W}"/>
                        <MenuItem Header="{DynamicResource Text.PageTabBar.Tab.CloseOther}"
                                  Command="{Binding #me.((vm:Launcher)DataContext).CloseOtherTabs}"
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="{DynamicResource Text.PageTabBar.Tab.CloseRight}"
                                  Command="{Binding #me.((vm:Launcher)DataContext).CloseRightTabs}"
                                  CommandParameter="{Binding}"/>
                        <MenuItem Header="-" IsVisible="{Binding Node.IsRepository}"/>
                        <MenuItem IsVisible="{Binding Node.IsRepository}">
                          <MenuItem.Header>
                            <Grid Height="20" ColumnDefinitions="Auto,*">
                              <TextBlock Grid.Column="0" Text="{DynamicResource Text.PageTabBar.Tab.Bookmark}"/>
                              <ComboBox Grid.Column="1"
                                        HorizontalAlignment="Right" VerticalAlignment="Center"
                                        BorderThickness=".5" Margin="8,0,0,0"
                                        ItemsSource="{x:Static m:Bookmarks.Supported}"
                                        SelectedIndex="{Binding Node.Bookmark, Mode=TwoWay}">
                                <ComboBox.Resources>
                                  <Thickness x:Key="ComboBoxPadding">12,2,0,2</Thickness>
                                  <Thickness x:Key="ComboBoxEditableTextPadding">11,2,32,2</Thickness>
                                  <x:Double x:Key="ComboBoxMinHeight">22</x:Double>
                                </ComboBox.Resources>
                                <ComboBox.ItemTemplate>
                                  <DataTemplate>
                                    <Border Height="20" VerticalAlignment="Center">
                                      <Path Width="12" Height="12"
                                            Fill="{Binding Converter={x:Static c:BookmarkConverters.ToBrush}}"
                                            StrokeThickness="{Binding Converter={x:Static c:BookmarkConverters.ToStrokeThickness}}"
                                            Stroke="{DynamicResource Brush.FG1}"
                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Data="{StaticResource Icons.Bookmark}"/>
                                    </Border>
                                  </DataTemplate>
                                </ComboBox.ItemTemplate>
                              </ComboBox>
                            </Grid>
                          </MenuItem.Header>
                        </MenuItem>
                        <MenuItem Header="-" IsVisible="{Binding Node.IsRepository}"/>
                        <MenuItem Header="{DynamicResource Text.PageTabBar.Tab.CopyPath}" Command="{Binding CopyPath}" IsVisible="{Binding Node.IsRepository}"/>
                      </ContextMenu>
                    </Border.ContextMenu>

                    <Grid Width="{Binding Source={x:Static vm:Preference.Instance}, Path=UseFixedTabWidth, Converter={x:Static c:BoolConverters.ToPageTabWidth}}" Height="30" ColumnDefinitions="Auto,*,Auto" VerticalAlignment="Center">
                      <Path Grid.Column="0"
                            Width="12" Height="12" Margin="12,0"
                            Fill="{Binding Node.Bookmark, Converter={x:Static c:BookmarkConverters.ToBrush}}"
                            StrokeThickness="{Binding Node.Bookmark, Converter={x:Static c:BookmarkConverters.ToStrokeThickness}}"
                            Stroke="{DynamicResource Brush.FG1}"
                            Data="{StaticResource Icons.Bookmark}"
                            IsVisible="{Binding Node.IsRepository}"
                            IsHitTestVisible="False"/>
                      <Path Grid.Column="0"
                            Width="12" Height="12" Margin="12,0"
                            Fill="{DynamicResource Brush.FG1}"
                            Data="{StaticResource Icons.Repositories}"
                            IsVisible="{Binding !Node.IsRepository}"
                            IsHitTestVisible="False"/>
                      <TextBlock Grid.Column="1"
                                 Classes="monospace"
                                 FontSize="12"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                 TextAlignment="Center"
                                 Text="{Binding Node.Name}"
                                 IsVisible="{Binding Node.IsRepository}"
                                 IsHitTestVisible="False"/>
                      <TextBlock Grid.Column="1"
                                 Classes="monospace"
                                 FontSize="12"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                 TextAlignment="Center"
                                 Text="{DynamicResource Text.PageTabBar.Welcome.Title}"
                                 IsVisible="{Binding !Node.IsRepository}"
                                 IsHitTestVisible="False"/>
                      <Button Grid.Column="2"
                              Classes="icon_button"
                              Width="16" Height="16" Margin="12,0"
                              Command="{Binding #me.((vm:Launcher)DataContext).CloseTab}"
                              CommandParameter="{Binding}">
                        <ToolTip.Tip>
                          <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="{DynamicResource Text.PageTabBar.Tab.Close}" VerticalAlignment="Center"/>
                            <TextBlock Margin="16,0,0,0" Text="{OnPlatform Ctrl+W, macOS=âŒ˜+W}" Opacity=".6" FontSize="11" VerticalAlignment="Center"/>
                          </StackPanel>
                        </ToolTip.Tip>
                        <Path Width="8" Height="8" Data="{StaticResource Icons.Window.Close}"/>
                      </Button>
                      <Rectangle Grid.Column="2" Width=".5" Height="20" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{DynamicResource Brush.FG2}">
                        <Rectangle.IsVisible>
                          <MultiBinding Converter="{x:Static c:LauncherPageConverters.ToTabSeperatorVisible}">
                            <Binding/>
                            <Binding Path="$parent[ListBox].SelectedItem"/>
                            <Binding Path="#me.((vm:Launcher)DataContext).Pages"/>
                          </MultiBinding>
                        </Rectangle.IsVisible>
                      </Rectangle>
                    </Grid>
                  </Border>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>

            <Button Classes="icon_button"
                    Width="16" Height="16"
                    Margin="8,0"
                    Command="{Binding AddNewTab}">
              <ToolTip.Tip>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                  <TextBlock Text="{DynamicResource Text.PageTabBar.New}" VerticalAlignment="Center"/>
                  <TextBlock Margin="16,0,0,0" Text="{OnPlatform Ctrl+T, macOS=âŒ˜+T}" Opacity=".6" FontSize="11" VerticalAlignment="Center"/>
                </StackPanel>
              </ToolTip.Tip>
              
              <Path Width="12" Height="12" Data="{StaticResource Icons.Plus}"/>
            </Button>
          </StackPanel>
        </ScrollViewer>

        <RepeatButton x:Name="rightScrollIndicator" Grid.Column="2" Classes="icon_button" Width="18" Height="30" Click="ScrollTabsRight">
          <Path Width="8" Height="14" Stretch="Fill" Data="{StaticResource Icons.TriangleRight}"/>
        </RepeatButton>
      </Grid>

      <!-- Caption Buttons (Windows/Linux)-->
      <Border Grid.Column="2" Margin="32,0,0,0" IsVisible="{OnPlatform True, macOS=False}">
        <v:CaptionButtons Height="30" VerticalAlignment="Top"/>
      </Border>
    </Grid>

    <!-- Page body -->
    <ContentControl Grid.Row="1" Background="{DynamicResource Brush.ToolBar}" Content="{Binding ActivePage.Data}">
      <ContentControl.DataTemplates>
        <DataTemplate DataType="vm:Welcome">
          <v:Welcome/>
        </DataTemplate>

        <DataTemplate DataType="vm:Repository">
          <v:Repository/>
        </DataTemplate>
      </ContentControl.DataTemplates>
    </ContentControl>

    <!-- Popup container -->
    <Grid Grid.Row="1" Margin="0,36,0,0" IsVisible="{Binding ActivePage.Popup, Converter={x:Static ObjectConverters.IsNotNull}}">
      <Border Background="Transparent" PointerPressed="OnPopupCancelByClickMask"/>

      <Grid Width="500" HorizontalAlignment="Center" VerticalAlignment="Top">                
        <ContentControl Content="{Binding ActivePage.Popup}" ClipToBounds="True">
          <ContentControl.DataTemplates>
            <DataTemplate DataType="vm:Popup">
              <Border Margin="8,0,8,8"
                      Background="{DynamicResource Brush.Popup}"
                      BorderBrush="{DynamicResource Brush.Border0}">
                <Border.CornerRadius>
                  <OnPlatform Default="0,0,4,4" Linux="0"/>
                </Border.CornerRadius>

                <Border.BorderThickness>
                  <OnPlatform Default="0" Linux="1,0,1,1"/>
                </Border.BorderThickness>

                <Border.Effect>
                  <OnPlatform Default="{x:Null}">
                    <On Options="macOS, Windows">
                      <DropShadowEffect BlurRadius="8" OffsetX="0" OffsetY="0" Color="Black" Opacity=".5"/>
                    </On>
                  </OnPlatform>
                </Border.Effect>
                
                <StackPanel Margin="8" Orientation="Vertical">
                  <!-- Popup Widget -->
                  <ContentPresenter Margin="0,8"
                                    Content="{Binding View}"
                                    IsHitTestVisible="{Binding InProgress, Converter={x:Static BoolConverters.Not}}"/>

                  <!-- Options -->
                  <StackPanel Margin="0,8,0,0"
                              Height="32"
                              Orientation="Horizontal"
                              HorizontalAlignment="Right"
                              IsVisible="{Binding InProgress, Converter={x:Static BoolConverters.Not}}">
                    <Button Classes="flat primary"
                            Width="80"
                            Content="{DynamicResource Text.Sure}"
                            Click="OnPopupSure"
                            HotKey="Enter"/>
                    <Button Classes="flat"
                            Width="80"
                            Margin="8,0,0,0"
                            Content="{DynamicResource Text.Cancel}"
                            Click="OnPopupCancel"/>
                  </StackPanel>

                  <!-- Running -->
                  <v:PopupRunningStatus Margin="8"
                                        Description="{Binding ProgressDescription}"
                                        IsVisible="{Binding InProgress}"/>
                </StackPanel>
              </Border>
            </DataTemplate>
          </ContentControl.DataTemplates>
        </ContentControl>
      </Grid>
    </Grid>

    <!-- Notification container -->
    <Grid Grid.Row="1" Width="360" Margin="0,36,0,0" HorizontalAlignment="Right" VerticalAlignment="Top">
      <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
        <ItemsControl ItemsSource="{Binding ActivePage.Notifications}">
          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="m:Notification">
              <Grid Width="320" Margin="8">
                <Border Background="{DynamicResource Brush.Window}" BorderBrush="{DynamicResource Brush.Border0}" BorderThickness="1" CornerRadius="4" Effect="drop-shadow(0 0 8 #40000000)"/>

                <Grid Margin="8" RowDefinitions="26,Auto,Auto">
                  <StackPanel Grid.Row="0" Margin="8,0,0,0" Orientation="Horizontal" IsVisible="{Binding IsError}">
                    <Path Width="14" Height="14" Data="{StaticResource Icons.Error}" Fill="Red"/>
                    <TextBlock Margin="8,0,0,0" FontWeight="Bold" FontSize="14" Text="{DynamicResource Text.Launcher.Error}"/>
                  </StackPanel>
                  <StackPanel Grid.Row="0" Margin="8,0,0,0" Orientation="Horizontal" IsVisible="{Binding !IsError}">
                    <Path Width="14" Height="14" Data="{StaticResource Icons.Info}" Fill="Green"/>
                    <TextBlock Margin="8,0,0,0" FontWeight="Bold" FontSize="14" Text="{DynamicResource Text.Launcher.Info}"/>
                  </StackPanel>

                  <TextBox Grid.Row="1"
                           Classes="no_background no_border"
                           IsReadOnly="True"
                           TextWrapping="Wrap"
                           ScrollViewer.VerticalScrollBarVisibility="Auto"
                           MaxHeight="100"
                           Margin="8" Padding="0"
                           VerticalContentAlignment="Top"
                           Text="{Binding Message}"/>
                  <Button Grid.Row="2"
                          Classes="flat primary"
                          Height="30"
                          Margin="4,0"
                          Command="{Binding #me.((vm:Launcher)DataContext).ActivePage.DismissNotification}"
                          CommandParameter="{Binding}"
                          Content="{DynamicResource Text.Close}"
                          HorizontalAlignment="Right"
                          HorizontalContentAlignment="Center"
                          VerticalContentAlignment="Center"/>
                </Grid>
              </Grid>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>
    </Grid>

    <!-- Custom window sizer for Linux -->
    <Grid Grid.Row="0" Grid.RowSpan="2" IsVisible="{OnPlatform False, Linux=True}" IsHitTestVisible="{Binding #me.WindowState, Converter={x:Static c:WindowStateConverters.IsNormal}}">
      <Border Width="4" Height="4"
              Background="Transparent"
              HorizontalAlignment="Left" VerticalAlignment="Top"
              Cursor="TopLeftCorner"
              Tag="{x:Static WindowEdge.NorthWest}"
              PointerPressed="CustomResizeWindow"/>

      <Border Height="4" Margin="4,0"
              Background="Transparent"
              HorizontalAlignment="Stretch" VerticalAlignment="Top"
              Cursor="TopSide"
              Tag="{x:Static WindowEdge.North}"
              PointerPressed="CustomResizeWindow"/>

      <Border Width="4" Height="4"
              Background="Transparent"
              HorizontalAlignment="Right" VerticalAlignment="Top"
              Cursor="TopRightCorner"
              Tag="{x:Static WindowEdge.NorthEast}"
              PointerPressed="CustomResizeWindow"/>

      <Border Width="4" Margin="0,4"
              Background="Transparent"
              HorizontalAlignment="Left" VerticalAlignment="Stretch"
              Cursor="LeftSide"
              Tag="{x:Static WindowEdge.West}"
              PointerPressed="CustomResizeWindow"/>

      <Border Width="4" Margin="0,4"
              Background="Transparent"
              HorizontalAlignment="Right" VerticalAlignment="Stretch"
              Cursor="RightSide"
              Tag="{x:Static WindowEdge.East}"
              PointerPressed="CustomResizeWindow"/>

      <Border Width="4" Height="4"
              Background="Transparent"
              HorizontalAlignment="Left" VerticalAlignment="Bottom"
              Cursor="BottomLeftCorner"
              Tag="{x:Static WindowEdge.SouthWest}"
              PointerPressed="CustomResizeWindow"/>

      <Border Height="4" Margin="4,0"
              Background="Transparent"
              HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
              Cursor="BottomSide"
              Tag="{x:Static WindowEdge.South}"
              PointerPressed="CustomResizeWindow"/>

      <Border Width="4" Height="4"
              Background="Transparent"
              HorizontalAlignment="Right" VerticalAlignment="Bottom"
              Cursor="BottomRightCorner"
              Tag="{x:Static WindowEdge.SouthEast}"
              PointerPressed="CustomResizeWindow"/>
    </Grid>
  </Grid>
</Window>
